<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<db:config name="Database_Config" doc:name="Database Config" doc:id="3d9707dc-3168-4c2f-95c6-72c2a6adba5c" >
		<db:my-sql-connection host="${db.host}" port="${db.port}" user="${db.user}" password="${db.password}" database="${db.database}" />
	</db:config>
	<configuration-properties doc:name="Configuration properties" doc:id="8110397e-0fed-434d-bbd0-32939c43a6c8" file="app-${env}.properties" />
	<flow name="getcustomersFlow" doc:id="0e6f244e-0796-4876-93e5-90634e44da3f" >
		<db:select doc:name="Select" doc:id="68d52198-b61d-4043-ab9b-c942a5d2ba8e" config-ref="Database_Config">
			<db:sql >select * from t_customers where city =:rcity</db:sql>
			<db:input-parameters ><![CDATA[#[{"rcity": attributes.queryParams.city}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="ebfb81c2-d90e-4443-8b15-8b1f03b81fe6" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	customerId: payload01.id default "",
	email: payload01.email default "",
	fullName: payload01.name default "",
	phoneNumber: payload01.phoneNumber default "",
	addressLine1: payload01.addressLine1 default "",
	addressLine2: payload01.addressLine2 default "",
	city: payload01.city default "",
	state: payload01.state default "",
	pincode: payload01.postalCode as Number default 0
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="getCustomerbyIDFlow" doc:id="97345a76-0dcf-4e4e-819f-11016e47eee3" >
		<db:select doc:name="Select" doc:id="54dfd608-a375-488a-9642-60506f529392" config-ref="Database_Config">
			<db:sql >select * from t_customers where id = :rid</db:sql>
			<db:input-parameters ><![CDATA[#[{"rid": attributes.uriParams.customer_id}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="6de3b2a3-dcdd-497f-b045-7c9f077565b0" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
(payload map ( payload01 , indexOfPayload01 ) -> {
	customerId: payload01.id default "",
	email: payload01.email default "",
	fullName: payload01.name default "",
	phoneNumber: payload01.phoneNumber default "",
	addressLine1: payload01.addressLine1 default "",
	addressLine2: payload01.addressLine2 default "",
	city: payload01.city default "",
	state: payload01.state default "",
	pincode: payload01.postalCode as Number default 0
}) [0]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="deleteCustomersbyIDFlow" doc:id="e71d87f0-aba1-4680-aa3a-b3deaa62167c" >
		<db:delete doc:name="Delete" doc:id="b7c70465-2184-4b53-9b56-97207094fa0a" config-ref="Database_Config">
			<db:sql >delete from t_customers where id = :rid</db:sql>
			<db:input-parameters ><![CDATA[#[{"rid": attributes.uriParams.customer_id}]]]></db:input-parameters>
		</db:delete>
		<choice doc:name="Choice" doc:id="0cf35003-334c-4dc7-ac46-f5b2d87c42ca" >
			<when expression="#[payload == 1]">
				<set-payload value='{"message": "Customer has been deleted"}' doc:name="Set Payload" doc:id="d0df6982-f70c-40da-850b-3c85722793b4" mimeType="application/json"/>
				<set-variable value="200" doc:name="Set Variable" doc:id="acfffcb5-0543-4a4f-9abd-bdd00a71b47e" variableName="statusCode"/>
			</when>
			<otherwise >
				<set-payload value='{"message": "Customer has not found"}' doc:name="Set Payload" doc:id="646556fb-e676-4f4c-9c3a-d329178a35d5" />
				<set-variable value="404" doc:name="Set Variable" doc:id="ee808303-6a1d-421d-9798-4b5a4ffe448e" variableName="statusCode"/>
			</otherwise>
		</choice>
	</flow>
	<flow name="postcustomersFlow" doc:id="f544bd64-02ec-45e6-b8b5-096ce28bb6a8" >
		<ee:transform doc:name="Transform Message" doc:id="6d6b3313-cca6-46d6-a1c7-6d497d875103" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<db:insert doc:name="Insert" doc:id="65b9dc8c-0591-4b00-9a6b-5a37e00c6db2" config-ref="Database_Config">
			<db:sql >insert into t_customers(id,email,name,phoneNumber,addressLine1,addressLine2,city,state,postalCode) values(:id,:email,:name,:phoneNumber,:addressLine1,:addressLine2,:city,:state,:postalCode)</db:sql>
			<db:input-parameters ><![CDATA[#[{
	id: payload.customerId,
	email: payload.email,
	name: payload.fullName,
	phoneNumber: payload.phoneNumber,
	addressLine1: payload.addressLine1,
	addressLine2: payload.addressLine2,
	city: payload.city,
	state: payload.state,
	postalCode: payload.pincode
}]]]></db:input-parameters>
		</db:insert>
		<set-payload value='#[output application/json
---
if(payload.affectedRows ==1)
	message: "Customer has been inserted"
else
	message: "Customer is not inserted"]' doc:name="Set Payload" doc:id="f1e21cc6-76cb-4f5e-be42-ecb970f1d0d1" />
	</flow>
</mule>
